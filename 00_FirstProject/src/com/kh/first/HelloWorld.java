package com.kh.first; // 패키지 선언부:현재 클래스의 위치를 알려주는 부분

// 클래스의 풀네임:com.kh.first.HelloWorld
public class HelloWorld {// 클래스 영역의 시작
	
	// 한 줄만 쓸 수 있는 주석
	
	/* 범위 주석
	 * 
	 * 한 패키지 안에 여러 클래스 또는 패키지들이 존재 가능하다.
	 * 단, 동일한 이름의 패키지나 클래스가 존재할 수는 없다.
	 * 서로 다른 패키지 안에서는 동일한 이름의 패키지나 클래스가 존재할 수 있다.
	 * 예)com.kh.first.HelloWorld 와 com.kh.second.HelloWorld는 존재할 수 있음.
	 * 
	 * 기본 패키지에 클래스를 만드는 것은 권장하지 않는다.
	 * 모든 클래스를 기본 패키지에 넣어 놓으면 관리하기가 어렵기 때문.
	 * 기본 패키지에서 만들어진 클래스는 다른 패키지에서 사용할 수 없다.
	 * 
	 * 권장사항
	 * 1. 패키지는 적어도 세 단계 이상으로 만들어 주는 것을 권장한다.
	 * com.회사이름.프로젝트이름 또는 팀이름.카테고리
	 * 예)com.kh.member / com.kh.student 등등
	 * 
	 * 2. 패키지의 두 번째 레벨까지는 도메인의 역순으로 작성한다.
	 * 도메인 주소는 고유한 이름이기 때문에 중복을 방지할 수 있다.
	 * 도메인 주소만 봐도 어느 회사에서 제작한 프로젝트인지 파악할 수 있기 때문.
	 * 
	 */
	
	// 메인 메소드:프로그램 시작점, 프로그램당 최소 1개는 가지고 있어야 한다.
	public static void main(String[] args) {// 메인 메소드 영역의 시작
		
		// 실행하고자 하는 내용
		System.out.println("Hello World!!");
		System.out.println("Hello JAVA!!");
		
		/* method: 사전적으로 기능을 의미한다.
		 * 하나의 기능 단위
		 * 한 개의 클래스 안에 여러개의 메소드가 존재 가능
		 * 메소드 이름은 중복이 가능하다(단, 규칙이 있음)-객체 파트에서 진행
		 * 
		 * 메소드는 메인 메소드와 일반 메소드로 나뉜다.
		 * 메소드를 실행하는 것을 "호출"한다 라고 표현
		 * 일반 메소드는 스스로 실행될 수 없다.
		 * 다른 메소드에서 호출해줘야 사용 가능.
		 */
		
		// 일반 메소드 호출 
		printHi();
		
	}// 메인 메소드 영역의 끝
	
	// 일반 메소드
	public static void printHi() {
		System.out.println("안녕하세요 제 이름은 홍길동입니다.");
	}
	

	
	
}// 클래스 영역의 끝